/* Copyright (c) 2018 elementary LLC (https://elementary.io)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, Inc.,; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this program; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

namespace PF.Dialogs {
    public Granite.MessageDialog show_error_dialog (string primary_text,
                                                    string secondary_text,
                                                    Gtk.Window? parent) {
        /* Use default button type "CLOSE" */
        var dialog = new Granite.MessageDialog.with_image_from_icon_name (primary_text, secondary_text, "dialog-error");
        return display_dialog (dialog, parent);
    }

    public Granite.MessageDialog show_warning_dialog (string primary_text,
                                                                   string secondary_text,
                                                                   Gtk.Window? parent) {
        /* Use default button type "CLOSE" */
        var dialog = new Granite.MessageDialog.with_image_from_icon_name (primary_text, secondary_text, "dialog-warning");
        return display_dialog (dialog, parent);
    }

    /* Need to implement this until replace Gtk dialogs generated by marlin_file_operations do_run_simple_dialog () */
    public void gtk_message_dialog_set_details_label (Gtk.MessageDialog dialog, string details_text) {
        var details_view = new Gtk.TextView ();
        details_view.border_width = 12;
        details_view.buffer.text = details_text;
        details_view.editable = false;
        details_view.pixels_below_lines = 3;
        details_view.wrap_mode = Gtk.WrapMode.WORD;
        details_view.get_style_context ().add_class (Granite.STYLE_CLASS_TERMINAL);

        var scroll_box = new Gtk.ScrolledWindow (null, null);
        scroll_box.margin_top = 12;
        scroll_box.min_content_height = 70;
        scroll_box.add (details_view);

        var expander = new Gtk.Expander.with_mnemonic (_("Show more _details"));
        expander.resize_toplevel = true;
        expander.add (scroll_box);
        expander.show_all ();

        var content_area = (Gtk.Box)(dialog.get_message_area ());
        content_area.pack_start (expander, false, false, 0);

        dialog.resizable = true;
    }

    private Granite.MessageDialog display_dialog (Granite.MessageDialog dialog, Gtk.Window? parent) {
        if (parent != null) {
            dialog.set_transient_for (parent);
        }

        dialog.response.connect (() => {
            dialog.destroy ();
        });

        dialog.show ();
        return dialog;
    }
}
